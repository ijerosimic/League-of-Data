// <auto-generated />
using System;
using LeagueDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LeagueDataAccess.Migrations
{
    [DbContext(typeof(LeagueContext))]
    partial class LeagueContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0-preview3.19554.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LeagueEntities.Models.Champion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChampionDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ChampionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ChampionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Champions");
                });

            modelBuilder.Entity("LeagueEntities.Models.ChampionStats", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Armor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArmorPerLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<decimal>("AttackDamage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AttackDamagePerLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AttackRange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AttackSpeedOffset")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AttackSpeedPerLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ChampionID")
                        .HasColumnType("int");

                    b.Property<decimal>("CritChance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CritChancePerLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<decimal>("HitPoints")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HitPointsPerLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HitPointsRegen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HitPointsRegenPerLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Magic")
                        .HasColumnType("int");

                    b.Property<decimal>("ManaPoints")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ManaPointsPerLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ManaPointsRegen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ManaPointsRegenPerLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MoveSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ResourceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SpellBlock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SpellBlockPerLevel")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("ChampionID")
                        .IsUnique();

                    b.ToTable("ChampionsStats");
                });

            modelBuilder.Entity("LeagueEntities.Models.ChampionTags", b =>
                {
                    b.Property<int>("ChampionID")
                        .HasColumnType("int");

                    b.Property<int>("TagID")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ChampionID", "TagID");

                    b.HasIndex("TagID");

                    b.ToTable("ChampionTags");
                });

            modelBuilder.Entity("LeagueEntities.Models.Item", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("LeagueEntities.Models.Map", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MapName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Maps");

                    b.HasData(
                        new
                        {
                            ID = 11,
                            MapName = "Summoner's Rift"
                        },
                        new
                        {
                            ID = 3,
                            MapName = "The Proving Grounds"
                        },
                        new
                        {
                            ID = 4,
                            MapName = "Twisted Treeline"
                        },
                        new
                        {
                            ID = 12,
                            MapName = "Howling Abyss"
                        },
                        new
                        {
                            ID = 14,
                            MapName = "Butcher's Bridge"
                        });
                });

            modelBuilder.Entity("LeagueEntities.Models.Match", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlueBarons")
                        .HasColumnType("int");

                    b.Property<int>("BlueDragons")
                        .HasColumnType("int");

                    b.Property<int>("BlueElder")
                        .HasColumnType("int");

                    b.Property<int>("BlueGold")
                        .HasColumnType("int");

                    b.Property<int>("BlueKills")
                        .HasColumnType("int");

                    b.Property<int>("BlueTurrets")
                        .HasColumnType("int");

                    b.Property<string>("GameMode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("GameType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("MapID")
                        .HasColumnType("int");

                    b.Property<DateTime>("MatchCreation")
                        .HasColumnType("datetime2");

                    b.Property<int>("MatchDuration")
                        .HasColumnType("int");

                    b.Property<int>("QueueTypeID")
                        .HasColumnType("int");

                    b.Property<int>("RedBarons")
                        .HasColumnType("int");

                    b.Property<int>("RedDragons")
                        .HasColumnType("int");

                    b.Property<int>("RedElder")
                        .HasColumnType("int");

                    b.Property<int>("RedGold")
                        .HasColumnType("int");

                    b.Property<int>("RedKills")
                        .HasColumnType("int");

                    b.Property<int>("RedTurrets")
                        .HasColumnType("int");

                    b.Property<int>("SeasonNo")
                        .HasColumnType("int");

                    b.Property<int>("ServerID")
                        .HasColumnType("int");

                    b.Property<int>("TotalGold")
                        .HasColumnType("int");

                    b.Property<int>("TotalKills")
                        .HasColumnType("int");

                    b.Property<string>("Winner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MapID");

                    b.HasIndex("QueueTypeID");

                    b.HasIndex("ServerID");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BlueBarons = 1,
                            BlueDragons = 5,
                            BlueElder = 0,
                            BlueGold = 88407,
                            BlueKills = 71,
                            BlueTurrets = 11,
                            GameMode = "CLASSIC",
                            GameType = "MATCHED_GAME",
                            MapID = 11,
                            MatchCreation = new DateTime(2019, 11, 28, 23, 26, 42, 170, DateTimeKind.Local).AddTicks(6754),
                            MatchDuration = 4240,
                            QueueTypeID = 440,
                            RedBarons = 1,
                            RedDragons = 0,
                            RedElder = 0,
                            RedGold = 77988,
                            RedKills = 47,
                            RedTurrets = 3,
                            SeasonNo = 5,
                            ServerID = 2,
                            TotalGold = 166395,
                            TotalKills = 108,
                            Winner = "Blue"
                        },
                        new
                        {
                            ID = 2,
                            BlueBarons = 0,
                            BlueDragons = 0,
                            BlueElder = 0,
                            BlueGold = 0,
                            BlueKills = 0,
                            BlueTurrets = 0,
                            GameMode = "CLASSIC",
                            GameType = "MATCHED_GAME",
                            MapID = 11,
                            MatchCreation = new DateTime(2019, 11, 28, 23, 26, 42, 175, DateTimeKind.Local).AddTicks(2402),
                            MatchDuration = 2415,
                            QueueTypeID = 440,
                            RedBarons = 0,
                            RedDragons = 0,
                            RedElder = 0,
                            RedGold = 0,
                            RedKills = 0,
                            RedTurrets = 0,
                            SeasonNo = 13,
                            ServerID = 2,
                            TotalGold = 0,
                            TotalKills = 0
                        },
                        new
                        {
                            ID = 3,
                            BlueBarons = 0,
                            BlueDragons = 0,
                            BlueElder = 0,
                            BlueGold = 0,
                            BlueKills = 0,
                            BlueTurrets = 0,
                            GameMode = "CLASSIC",
                            GameType = "MATCHED_GAME",
                            MapID = 11,
                            MatchCreation = new DateTime(2019, 11, 28, 23, 26, 42, 175, DateTimeKind.Local).AddTicks(2516),
                            MatchDuration = 4151,
                            QueueTypeID = 440,
                            RedBarons = 0,
                            RedDragons = 0,
                            RedElder = 0,
                            RedGold = 0,
                            RedKills = 0,
                            RedTurrets = 0,
                            SeasonNo = 13,
                            ServerID = 2,
                            TotalGold = 0,
                            TotalKills = 0
                        },
                        new
                        {
                            ID = 4,
                            BlueBarons = 0,
                            BlueDragons = 0,
                            BlueElder = 0,
                            BlueGold = 0,
                            BlueKills = 0,
                            BlueTurrets = 0,
                            GameMode = "CLASSIC",
                            GameType = "MATCHED_GAME",
                            MapID = 11,
                            MatchCreation = new DateTime(2019, 11, 28, 23, 26, 42, 175, DateTimeKind.Local).AddTicks(2526),
                            MatchDuration = 2415,
                            QueueTypeID = 440,
                            RedBarons = 0,
                            RedDragons = 0,
                            RedElder = 0,
                            RedGold = 0,
                            RedKills = 0,
                            RedTurrets = 0,
                            SeasonNo = 13,
                            ServerID = 2,
                            TotalGold = 0,
                            TotalKills = 0
                        },
                        new
                        {
                            ID = 5,
                            BlueBarons = 0,
                            BlueDragons = 0,
                            BlueElder = 0,
                            BlueGold = 0,
                            BlueKills = 0,
                            BlueTurrets = 0,
                            GameMode = "CLASSIC",
                            GameType = "MATCHED_GAME",
                            MapID = 11,
                            MatchCreation = new DateTime(2019, 11, 28, 23, 26, 42, 175, DateTimeKind.Local).AddTicks(2530),
                            MatchDuration = 2415,
                            QueueTypeID = 440,
                            RedBarons = 0,
                            RedDragons = 0,
                            RedElder = 0,
                            RedGold = 0,
                            RedKills = 0,
                            RedTurrets = 0,
                            SeasonNo = 13,
                            ServerID = 2,
                            TotalGold = 0,
                            TotalKills = 0
                        });
                });

            modelBuilder.Entity("LeagueEntities.Models.QueueType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("ID");

                    b.ToTable("QueueTypes");

                    b.HasData(
                        new
                        {
                            ID = 440,
                            Description = "5v5 Ranked Flex games"
                        },
                        new
                        {
                            ID = 430,
                            Description = "5v5 Blind Pick games"
                        },
                        new
                        {
                            ID = 420,
                            Description = "5v5 Ranked Solo games"
                        },
                        new
                        {
                            ID = 400,
                            Description = "5v5 Draft Pick games"
                        });
                });

            modelBuilder.Entity("LeagueEntities.Models.Server", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ServerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("ID");

                    b.ToTable("Servers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ServerName = "EUW1"
                        },
                        new
                        {
                            ID = 2,
                            ServerName = "EUN1"
                        });
                });

            modelBuilder.Entity("LeagueEntities.Models.Summoner", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasMaxLength(100)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Champion")
                        .HasColumnType("int");

                    b.Property<int>("ChampionMasteryScore")
                        .HasColumnType("int");

                    b.Property<int>("ProfileIconNumber")
                        .HasColumnType("int");

                    b.Property<int>("ServerID")
                        .HasColumnType("int");

                    b.Property<int>("SummonerLevel")
                        .HasColumnType("int");

                    b.Property<string>("SummonerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.HasIndex("ServerID");

                    b.ToTable("Summoners");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Champion = 0,
                            ChampionMasteryScore = 0,
                            ProfileIconNumber = 523,
                            ServerID = 1,
                            SummonerLevel = 133,
                            SummonerName = "golemko"
                        },
                        new
                        {
                            ID = 2,
                            Champion = 0,
                            ChampionMasteryScore = 0,
                            ProfileIconNumber = 1450,
                            ServerID = 1,
                            SummonerLevel = 48,
                            SummonerName = "Peasant Slayer"
                        },
                        new
                        {
                            ID = 3,
                            Champion = 0,
                            ChampionMasteryScore = 0,
                            ProfileIconNumber = 1459,
                            ServerID = 1,
                            SummonerLevel = 99,
                            SummonerName = "Shimeshugar"
                        },
                        new
                        {
                            ID = 4,
                            Champion = 0,
                            ChampionMasteryScore = 0,
                            ProfileIconNumber = 4086,
                            ServerID = 1,
                            SummonerLevel = 90,
                            SummonerName = "Koomuch"
                        },
                        new
                        {
                            ID = 5,
                            Champion = 0,
                            ChampionMasteryScore = 0,
                            ProfileIconNumber = 658,
                            ServerID = 1,
                            SummonerLevel = 47,
                            SummonerName = "ubnix"
                        },
                        new
                        {
                            ID = 6,
                            Champion = 0,
                            ChampionMasteryScore = 0,
                            ProfileIconNumber = 3569,
                            ServerID = 1,
                            SummonerLevel = 60,
                            SummonerName = "Major Alexander"
                        },
                        new
                        {
                            ID = 7,
                            Champion = 0,
                            ChampionMasteryScore = 0,
                            ProfileIconNumber = 3589,
                            ServerID = 1,
                            SummonerLevel = 60,
                            SummonerName = "Major Alexander"
                        },
                        new
                        {
                            ID = 8,
                            Champion = 0,
                            ChampionMasteryScore = 0,
                            ProfileIconNumber = 3615,
                            ServerID = 1,
                            SummonerLevel = 35,
                            SummonerName = "Bongiorno"
                        },
                        new
                        {
                            ID = 9,
                            Champion = 0,
                            ChampionMasteryScore = 0,
                            ProfileIconNumber = 3635,
                            ServerID = 1,
                            SummonerLevel = 144,
                            SummonerName = "Nocturno"
                        },
                        new
                        {
                            ID = 10,
                            Champion = 0,
                            ChampionMasteryScore = 0,
                            ProfileIconNumber = 3670,
                            ServerID = 1,
                            SummonerLevel = 188,
                            SummonerName = "Broxah"
                        });
                });

            modelBuilder.Entity("LeagueEntities.Models.SummonerChampionMastery", b =>
                {
                    b.Property<int>("SummonerID")
                        .HasColumnType("int")
                        .HasMaxLength(100);

                    b.Property<int>("ChampionID")
                        .HasColumnType("int");

                    b.Property<int>("ChampionLevel")
                        .HasColumnType("int");

                    b.Property<int>("ChampionPoints")
                        .HasColumnType("int");

                    b.Property<int>("ChampionPointsSinceLastLevel")
                        .HasColumnType("int");

                    b.Property<int>("ChampionPointsUntilNextLevel")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LastPlayTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TokensEarned")
                        .HasColumnType("int");

                    b.HasKey("SummonerID", "ChampionID");

                    b.HasIndex("ChampionID");

                    b.ToTable("SummonersChampionMasteries");
                });

            modelBuilder.Entity("LeagueEntities.Models.SummonerMatch", b =>
                {
                    b.Property<int>("SummonerID")
                        .HasColumnType("int")
                        .HasMaxLength(100);

                    b.Property<int>("MatchID")
                        .HasColumnType("int");

                    b.Property<int>("Assists")
                        .HasColumnType("int");

                    b.Property<int>("ChampionID")
                        .HasColumnType("int");

                    b.Property<decimal>("DamageDone")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Deaths")
                        .HasColumnType("int");

                    b.Property<decimal>("GoldEarned")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Item1")
                        .HasColumnType("int");

                    b.Property<int>("Item2")
                        .HasColumnType("int");

                    b.Property<int>("Item3")
                        .HasColumnType("int");

                    b.Property<int>("Item4")
                        .HasColumnType("int");

                    b.Property<int>("Item5")
                        .HasColumnType("int");

                    b.Property<int>("Item6")
                        .HasColumnType("int");

                    b.Property<string>("KeystoneRune")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KillParticipation")
                        .HasColumnType("int");

                    b.Property<int>("Kills")
                        .HasColumnType("int");

                    b.Property<string>("LaneName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinorRune")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SummonerSpell1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SummonerSpell2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Team")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trinket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WardsPlaced")
                        .HasColumnType("int");

                    b.HasKey("SummonerID", "MatchID");

                    b.HasIndex("ChampionID");

                    b.HasIndex("MatchID");

                    b.ToTable("SummonerMatches");

                    b.HasData(
                        new
                        {
                            SummonerID = 1,
                            MatchID = 1,
                            Assists = 5,
                            ChampionID = 266,
                            DamageDone = 43.511m,
                            Deaths = 18,
                            GoldEarned = 21.523m,
                            ID = 1,
                            Item1 = 1001,
                            Item2 = 1004,
                            Item3 = 1005,
                            Item4 = 1007,
                            Item5 = 1038,
                            Item6 = 0,
                            KeystoneRune = "Lethal Tempo",
                            KillParticipation = 0,
                            Kills = 11,
                            LaneName = "BOTTOM",
                            MinorRune = "Resolve",
                            RoleName = "DUO_MARKSMAN",
                            Team = "Blue",
                            Trinket = "Warding Totem",
                            WardsPlaced = 14
                        },
                        new
                        {
                            SummonerID = 2,
                            MatchID = 1,
                            Assists = 5,
                            ChampionID = 103,
                            DamageDone = 43.511m,
                            Deaths = 18,
                            GoldEarned = 21.523m,
                            ID = 2,
                            Item1 = 1001,
                            Item2 = 1004,
                            Item3 = 1005,
                            Item4 = 1007,
                            Item5 = 1038,
                            Item6 = 0,
                            KeystoneRune = "Lethal Tempo",
                            KillParticipation = 0,
                            Kills = 11,
                            LaneName = "MID",
                            MinorRune = "Resolve",
                            RoleName = "SOLO_MID",
                            Team = "Blue",
                            Trinket = "Warding Totem",
                            WardsPlaced = 14
                        },
                        new
                        {
                            SummonerID = 3,
                            MatchID = 1,
                            Assists = 5,
                            ChampionID = 12,
                            DamageDone = 43.511m,
                            Deaths = 18,
                            GoldEarned = 21.523m,
                            ID = 3,
                            Item1 = 1001,
                            Item2 = 1004,
                            Item3 = 1005,
                            Item4 = 1007,
                            Item5 = 1038,
                            Item6 = 0,
                            KeystoneRune = "Lethal Tempo",
                            KillParticipation = 0,
                            Kills = 11,
                            LaneName = "BOTTOM",
                            MinorRune = "Resolve",
                            RoleName = "DUO_SUPPORT",
                            Team = "Blue",
                            Trinket = "Warding Totem",
                            WardsPlaced = 14
                        },
                        new
                        {
                            SummonerID = 4,
                            MatchID = 1,
                            Assists = 5,
                            ChampionID = 32,
                            DamageDone = 43.511m,
                            Deaths = 18,
                            GoldEarned = 21.523m,
                            ID = 4,
                            Item1 = 1001,
                            Item2 = 1004,
                            Item3 = 1005,
                            Item4 = 1007,
                            Item5 = 1038,
                            Item6 = 0,
                            KeystoneRune = "Lethal Tempo",
                            KillParticipation = 0,
                            Kills = 11,
                            LaneName = "JUNGLE",
                            MinorRune = "Resolve",
                            RoleName = "SOLO_JUNGLE",
                            Team = "Blue",
                            Trinket = "Warding Totem",
                            WardsPlaced = 14
                        },
                        new
                        {
                            SummonerID = 5,
                            MatchID = 1,
                            Assists = 5,
                            ChampionID = 164,
                            DamageDone = 43.511m,
                            Deaths = 18,
                            GoldEarned = 21.523m,
                            ID = 5,
                            Item1 = 1001,
                            Item2 = 1004,
                            Item3 = 1005,
                            Item4 = 1007,
                            Item5 = 1038,
                            Item6 = 0,
                            KeystoneRune = "Lethal Tempo",
                            KillParticipation = 0,
                            Kills = 11,
                            LaneName = "TOP",
                            MinorRune = "Resolve",
                            RoleName = "SOLO_TOP",
                            Team = "Blue",
                            Trinket = "Warding Totem",
                            WardsPlaced = 14
                        },
                        new
                        {
                            SummonerID = 6,
                            MatchID = 1,
                            Assists = 5,
                            ChampionID = 42,
                            DamageDone = 43.511m,
                            Deaths = 18,
                            GoldEarned = 21.523m,
                            ID = 6,
                            Item1 = 1001,
                            Item2 = 1004,
                            Item3 = 1005,
                            Item4 = 1007,
                            Item5 = 1038,
                            Item6 = 0,
                            KeystoneRune = "Lethal Tempo",
                            KillParticipation = 0,
                            Kills = 11,
                            LaneName = "BOTTOM",
                            MinorRune = "Resolve",
                            RoleName = "DUO_MARKSMAN",
                            Team = "Red",
                            Trinket = "Warding Totem",
                            WardsPlaced = 14
                        },
                        new
                        {
                            SummonerID = 7,
                            MatchID = 1,
                            Assists = 5,
                            ChampionID = 131,
                            DamageDone = 43.511m,
                            Deaths = 18,
                            GoldEarned = 21.523m,
                            ID = 7,
                            Item1 = 1001,
                            Item2 = 1004,
                            Item3 = 1005,
                            Item4 = 1007,
                            Item5 = 1038,
                            Item6 = 0,
                            KeystoneRune = "Lethal Tempo",
                            KillParticipation = 0,
                            Kills = 11,
                            LaneName = "MID",
                            MinorRune = "Resolve",
                            RoleName = "SOLO_MID",
                            Team = "Red",
                            Trinket = "Warding Totem",
                            WardsPlaced = 14
                        },
                        new
                        {
                            SummonerID = 8,
                            MatchID = 1,
                            Assists = 5,
                            ChampionID = 9,
                            DamageDone = 43.511m,
                            Deaths = 18,
                            GoldEarned = 21.523m,
                            ID = 8,
                            Item1 = 1001,
                            Item2 = 1004,
                            Item3 = 1005,
                            Item4 = 1007,
                            Item5 = 1038,
                            Item6 = 0,
                            KeystoneRune = "Lethal Tempo",
                            KillParticipation = 0,
                            Kills = 11,
                            LaneName = "BOTTOM",
                            MinorRune = "Resolve",
                            RoleName = "DUO_SUPPORT",
                            Team = "Red",
                            Trinket = "Warding Totem",
                            WardsPlaced = 14
                        },
                        new
                        {
                            SummonerID = 9,
                            MatchID = 1,
                            Assists = 5,
                            ChampionID = 79,
                            DamageDone = 43.511m,
                            Deaths = 18,
                            GoldEarned = 21.523m,
                            ID = 9,
                            Item1 = 1001,
                            Item2 = 1004,
                            Item3 = 1005,
                            Item4 = 1007,
                            Item5 = 1038,
                            Item6 = 0,
                            KeystoneRune = "Lethal Tempo",
                            KillParticipation = 0,
                            Kills = 11,
                            LaneName = "JUNGLE",
                            MinorRune = "Resolve",
                            RoleName = "SOLO_JUNGLE",
                            Team = "Red",
                            Trinket = "Warding Totem",
                            WardsPlaced = 14
                        },
                        new
                        {
                            SummonerID = 10,
                            MatchID = 1,
                            Assists = 5,
                            ChampionID = 420,
                            DamageDone = 43.511m,
                            Deaths = 18,
                            GoldEarned = 21.523m,
                            ID = 10,
                            Item1 = 1001,
                            Item2 = 1004,
                            Item3 = 1005,
                            Item4 = 1007,
                            Item5 = 1038,
                            Item6 = 0,
                            KeystoneRune = "Lethal Tempo",
                            KillParticipation = 0,
                            Kills = 11,
                            LaneName = "TOP",
                            MinorRune = "Resolve",
                            RoleName = "SOLO_TOP",
                            Team = "Red",
                            Trinket = "Warding Totem",
                            WardsPlaced = 14
                        });
                });

            modelBuilder.Entity("LeagueEntities.Models.SummonerMatchesItems", b =>
                {
                    b.Property<int>("SummonerMatchID")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("SummonerMatchID", "ItemID");

                    b.ToTable("SummonerMatchesItems");
                });

            modelBuilder.Entity("LeagueEntities.Models.SummonerRankedLeague", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HotStreak")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFreshBlood")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVeteran")
                        .HasColumnType("bit");

                    b.Property<int>("LeaguePoints")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfLosses")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfWins")
                        .HasColumnType("int");

                    b.Property<int>("QueueTypeID")
                        .HasColumnType("int");

                    b.Property<int>("RankedLeagueDivision")
                        .HasColumnType("int");

                    b.Property<string>("RankedLeagueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RankedLeagueTier")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("SummonerID")
                        .HasColumnType("int")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.HasIndex("QueueTypeID");

                    b.HasIndex("SummonerID");

                    b.ToTable("SummonerRankedLeagues");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            HotStreak = false,
                            IsFreshBlood = false,
                            IsInactive = false,
                            IsVeteran = true,
                            LeaguePoints = 55,
                            NumberOfLosses = 122,
                            NumberOfWins = 122,
                            QueueTypeID = 420,
                            RankedLeagueDivision = 3,
                            RankedLeagueTier = "PLATINUM",
                            SummonerID = 1
                        },
                        new
                        {
                            ID = 2,
                            HotStreak = false,
                            IsFreshBlood = false,
                            IsInactive = false,
                            IsVeteran = false,
                            LeaguePoints = 0,
                            NumberOfLosses = 33,
                            NumberOfWins = 37,
                            QueueTypeID = 420,
                            RankedLeagueDivision = 4,
                            RankedLeagueTier = "PLATINUM",
                            SummonerID = 2
                        });
                });

            modelBuilder.Entity("LeagueEntities.Models.Tag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            TagName = "Fighter"
                        },
                        new
                        {
                            ID = 2,
                            TagName = "Tank"
                        },
                        new
                        {
                            ID = 3,
                            TagName = "Mage"
                        },
                        new
                        {
                            ID = 4,
                            TagName = "Assasin"
                        },
                        new
                        {
                            ID = 5,
                            TagName = "Support"
                        },
                        new
                        {
                            ID = 6,
                            TagName = "Marksman"
                        });
                });

            modelBuilder.Entity("LeagueEntities.Models.ChampionStats", b =>
                {
                    b.HasOne("LeagueEntities.Models.Champion", "Champion")
                        .WithOne("ChampionStats")
                        .HasForeignKey("LeagueEntities.Models.ChampionStats", "ChampionID");
                });

            modelBuilder.Entity("LeagueEntities.Models.ChampionTags", b =>
                {
                    b.HasOne("LeagueEntities.Models.Champion", "Champion")
                        .WithMany("ChampionTags")
                        .HasForeignKey("ChampionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeagueEntities.Models.Tag", "Tag")
                        .WithMany("ChampionTags")
                        .HasForeignKey("TagID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LeagueEntities.Models.Match", b =>
                {
                    b.HasOne("LeagueEntities.Models.Map", "Map")
                        .WithMany("Matches")
                        .HasForeignKey("MapID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeagueEntities.Models.QueueType", "QueueType")
                        .WithMany("Matches")
                        .HasForeignKey("QueueTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeagueEntities.Models.Server", "Server")
                        .WithMany("Matches")
                        .HasForeignKey("ServerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LeagueEntities.Models.Summoner", b =>
                {
                    b.HasOne("LeagueEntities.Models.Server", "Server")
                        .WithMany("Summoners")
                        .HasForeignKey("ServerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LeagueEntities.Models.SummonerChampionMastery", b =>
                {
                    b.HasOne("LeagueEntities.Models.Champion", "Champion")
                        .WithMany("SummonersChampionMasteries")
                        .HasForeignKey("ChampionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LeagueEntities.Models.Summoner", "Summoner")
                        .WithMany("SummonerChampionMasteries")
                        .HasForeignKey("SummonerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("LeagueEntities.Models.SummonerMatch", b =>
                {
                    b.HasOne("LeagueEntities.Models.Champion", "Champion")
                        .WithMany("SummonerMatches")
                        .HasForeignKey("ChampionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeagueEntities.Models.Match", "Match")
                        .WithMany("SummonerMatches")
                        .HasForeignKey("MatchID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LeagueEntities.Models.Summoner", "Summoner")
                        .WithMany("SummonerMatches")
                        .HasForeignKey("SummonerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("LeagueEntities.Models.SummonerMatchesItems", b =>
                {
                    b.HasOne("LeagueEntities.Models.Item", "Item")
                        .WithMany("SummonerMatchesItems")
                        .HasForeignKey("SummonerMatchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeagueEntities.Models.SummonerMatch", "SummonerMatch")
                        .WithMany("SummonerMatchesItems")
                        .HasForeignKey("SummonerMatchID")
                        .HasPrincipalKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LeagueEntities.Models.SummonerRankedLeague", b =>
                {
                    b.HasOne("LeagueEntities.Models.QueueType", "QueueType")
                        .WithMany("SummonerRankedLeagues")
                        .HasForeignKey("QueueTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeagueEntities.Models.Summoner", "Summoner")
                        .WithMany("SummonerRankedLeagues")
                        .HasForeignKey("SummonerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
